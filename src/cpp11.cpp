// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// Divisors.cpp
SEXP GetDivisorsC(SEXP Rv, SEXP RNamed, SEXP RShowStats, SEXP RSkipExtPR, SEXP RSkipECM, SEXP RNumThreads, int maxThreads);
extern "C" SEXP _RcppBigIntAlgos_GetDivisorsC(SEXP Rv, SEXP RNamed, SEXP RShowStats, SEXP RSkipExtPR, SEXP RSkipECM, SEXP RNumThreads, SEXP maxThreads) {
  BEGIN_CPP11
    return cpp11::as_sexp(GetDivisorsC(cpp11::as_cpp<cpp11::decay_t<SEXP>>(Rv), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RNamed), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RShowStats), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RSkipExtPR), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RSkipECM), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RNumThreads), cpp11::as_cpp<cpp11::decay_t<int>>(maxThreads)));
  END_CPP11
}
// NumThreads.cpp
SEXP cpp11GetNumThreads();
extern "C" SEXP _RcppBigIntAlgos_cpp11GetNumThreads() {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp11GetNumThreads());
  END_CPP11
}
// PrimeFactorization.cpp
SEXP PrimeFactorization(SEXP Rv, SEXP RNamed, SEXP RShowStats, SEXP RSkipExtPR, SEXP RSkipECM, SEXP RNumThreads, int maxThreads);
extern "C" SEXP _RcppBigIntAlgos_PrimeFactorization(SEXP Rv, SEXP RNamed, SEXP RShowStats, SEXP RSkipExtPR, SEXP RSkipECM, SEXP RNumThreads, SEXP maxThreads) {
  BEGIN_CPP11
    return cpp11::as_sexp(PrimeFactorization(cpp11::as_cpp<cpp11::decay_t<SEXP>>(Rv), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RNamed), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RShowStats), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RSkipExtPR), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RSkipECM), cpp11::as_cpp<cpp11::decay_t<SEXP>>(RNumThreads), cpp11::as_cpp<cpp11::decay_t<int>>(maxThreads)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_RcppBigIntAlgos_GetDivisorsC",       (DL_FUNC) &_RcppBigIntAlgos_GetDivisorsC,       7},
    {"_RcppBigIntAlgos_PrimeFactorization", (DL_FUNC) &_RcppBigIntAlgos_PrimeFactorization, 7},
    {"_RcppBigIntAlgos_cpp11GetNumThreads", (DL_FUNC) &_RcppBigIntAlgos_cpp11GetNumThreads, 0},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_RcppBigIntAlgos(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
