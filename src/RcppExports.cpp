// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getDivisorsC
SEXP getDivisorsC(SEXP Rv, SEXP RNamed);
RcppExport SEXP _bigIntegerAlgos_getDivisorsC(SEXP RvSEXP, SEXP RNamedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rv(RvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RNamed(RNamedSEXP);
    rcpp_result_gen = Rcpp::wrap(getDivisorsC(Rv, RNamed));
    return rcpp_result_gen;
END_RCPP
}
// QuadraticSieveContainer
SEXP QuadraticSieveContainer(SEXP Rn);
RcppExport SEXP _bigIntegerAlgos_QuadraticSieveContainer(SEXP RnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rn(RnSEXP);
    rcpp_result_gen = Rcpp::wrap(QuadraticSieveContainer(Rn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bigIntegerAlgos_getDivisorsC", (DL_FUNC) &_bigIntegerAlgos_getDivisorsC, 2},
    {"_bigIntegerAlgos_QuadraticSieveContainer", (DL_FUNC) &_bigIntegerAlgos_QuadraticSieveContainer, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigIntegerAlgos(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
