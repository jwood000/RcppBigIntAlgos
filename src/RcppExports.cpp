// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// GetDivisorsC
SEXP GetDivisorsC(SEXP Rv, SEXP RNamed, SEXP RNumThreads, int maxThreads);
RcppExport SEXP _RcppBigIntAlgos_GetDivisorsC(SEXP RvSEXP, SEXP RNamedSEXP, SEXP RNumThreadsSEXP, SEXP maxThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rv(RvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RNamed(RNamedSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RNumThreads(RNumThreadsSEXP);
    Rcpp::traits::input_parameter< int >::type maxThreads(maxThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDivisorsC(Rv, RNamed, RNumThreads, maxThreads));
    return rcpp_result_gen;
END_RCPP
}
// cpp11GetNumThreads
int cpp11GetNumThreads();
RcppExport SEXP _RcppBigIntAlgos_cpp11GetNumThreads() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(cpp11GetNumThreads());
    return rcpp_result_gen;
END_RCPP
}
// QuadraticSieveContainer
SEXP QuadraticSieveContainer(SEXP Rn, SEXP RShowStats, SEXP RNumThreads, int maxThreads);
RcppExport SEXP _RcppBigIntAlgos_QuadraticSieveContainer(SEXP RnSEXP, SEXP RShowStatsSEXP, SEXP RNumThreadsSEXP, SEXP maxThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rn(RnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RShowStats(RShowStatsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RNumThreads(RNumThreadsSEXP);
    Rcpp::traits::input_parameter< int >::type maxThreads(maxThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(QuadraticSieveContainer(Rn, RShowStats, RNumThreads, maxThreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppBigIntAlgos_GetDivisorsC", (DL_FUNC) &_RcppBigIntAlgos_GetDivisorsC, 4},
    {"_RcppBigIntAlgos_cpp11GetNumThreads", (DL_FUNC) &_RcppBigIntAlgos_cpp11GetNumThreads, 0},
    {"_RcppBigIntAlgos_QuadraticSieveContainer", (DL_FUNC) &_RcppBigIntAlgos_QuadraticSieveContainer, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppBigIntAlgos(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
